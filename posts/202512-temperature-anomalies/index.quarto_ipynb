{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Global temperature anomalies\"\n",
        "\n",
        "description: \"Revealing climate change through deviations in Earth's surface temperature from the historical average.\"\n",
        "\n",
        "categories: [environment, python]\n",
        "\n",
        "date: \"2025-11-03\"\n",
        "\n",
        "keywords: [\"temperature\"]\n",
        "\n",
        "image: FIG_NASA_Temperature_Anomalies.png\n",
        "image-alt: |\n",
        "  Temperature_Anomalies\n",
        "\n",
        "jupyter: python3\n",
        "\n",
        "format:\n",
        "  html:\n",
        "    code-fold: true\n",
        "---\n",
        "\n",
        "\n",
        "## Summary\n",
        "\n",
        "Global temperature anomalies indicate how Earth's surface temperature deviates from a historical average, providing crucial insights into climate change. Persistent positive anomalies signal a warming trend driven by greenhouse gas emissions, while negative anomalies are less frequent in recent decades. By tracking these variations, scientists can assess long-term climate patterns, identify extreme weather risks, and evaluate the impact of human activities on global temperatures.\n"
      ],
      "id": "16259e45"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: true\n",
        "#| output: false\n",
        "#| warning: false\n",
        "# Libraries\n",
        "# =========================================\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib.ticker as ticker\n",
        "import os\n",
        "\n",
        "# Data Extraction (temperature)\n",
        "# =========================================\n",
        "# URL NASA GISS global temperature\n",
        "url = \"https://data.giss.nasa.gov/gistemp/tabledata_v4/GLB.Ts+dSST.csv\"\n",
        "dft = pd.read_csv(url, skiprows=1)\n",
        "\n",
        "# Data Extraction (co2)\n",
        "# =========================================\n",
        "# URL del archivo CSV\n",
        "url = \"https://zenodo.org/records/13981696/files/GCB2024v17_MtCO2_flat.csv?download=1\"\n",
        "dfc = pd.read_csv(url)\n",
        "\n",
        "# Data Manipulation (temperature)\n",
        "# =========================================\n",
        "# Select columns\n",
        "dft = dft[[\"Year\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"J-D\"]]\n",
        "\n",
        "# Rename columns\n",
        "dft.columns = dft.columns.str.lower()\n",
        "dft = dft.rename(columns=lambda x: x.lower())\n",
        "\n",
        "# Unpivot columns\n",
        "dft = dft.melt(id_vars=[\"year\"], var_name=\"month\", value_name=\"value\")\n",
        "dft = dft[dft[\"month\"] == \"j-d\"]\n",
        "\n",
        "# Data Manipulation (co2)\n",
        "# =========================================\n",
        "# Transform Data\n",
        "dfc = dfc[dfc['ISO 3166-1 alpha-3'] == 'WLD']\n",
        "dfc.rename(columns={'Year': 'year', 'ISO 3166-1 alpha-3': 'iso', 'Total': 'co2'}, inplace=True)\n",
        "dfc = dfc[['year', 'iso', 'co2']]\n",
        "\n",
        "# Merge dataframes\n",
        "# =========================================\n",
        "df = dft.merge(dfc, on='year', how='left')\n",
        "df['value'] = pd.to_numeric(df['value'], errors='coerce')\n",
        "df = df[df['value'].notna()]\n",
        "\n",
        "print(df)\n",
        "\n",
        "# Data Visualization\n",
        "# =========================================\n",
        "# Font and style\n",
        "plt.rcParams.update({'font.family': 'sans-serif', 'font.sans-serif': ['Open Sans'], 'font.size': 9})\n",
        "sns.set(style=\"white\", palette=\"muted\")\n",
        "\n",
        "# Define a color map\n",
        "cmap = plt.get_cmap('coolwarm')\n",
        "norm = plt.Normalize(-0.5, 1)\n",
        "\n",
        "# Create figure and plot\n",
        "fig, ax1 = plt.subplots(figsize=(10, 5))\n",
        "ax2 = ax1.twinx()\n",
        "bars =ax1.bar(df['year'], df['value'], color=cmap(norm(df['value'])), width=1, edgecolor='none')\n",
        "line = ax2.plot(df['year'], df['co2'], label='CO2', color='#262626', linestyle=':', linewidth=1)\n",
        "\n",
        "# Add title and labels\n",
        "ax1.text(0, 1.12, f'Global Temperature Anomaly', fontsize=16, fontweight='bold', ha='left', transform=ax1.transAxes)\n",
        "ax1.text(0, 1.07, 'Compared with mid -20th century (°C)', fontsize=11, color='#262626', ha='left', transform=ax1.transAxes)\n",
        "ax1.text(0, 1.02, r'(In contrast with CO$_2$ emissions)', fontsize=9, fontweight='light', color='#262626', ha='left', transform=ax1.transAxes)\n",
        "ax1.set_xlim(1877, 2027)\n",
        "ax1.axhline(y=0, color='black', linestyle='-', linewidth=0.75)\n",
        "yticks = [-0.5, -0.25, 0, 0.25, 0.5, 0.75, 1, 1.25]\n",
        "ytick_labels = [f'{y:+.2f}' if y != 0 else '0' for y in yticks]\n",
        "ax1.set_yticks(yticks, ytick_labels)\n",
        "ax1.set_yticklabels(ytick_labels, fontsize=9)\n",
        "ax1.set_xticks([1880, 1890, 1900, 1910, 1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990, 2000, 2010, 2020])\n",
        "ax1.tick_params(axis='x', labelsize=9)\n",
        "ax1.yaxis.set_ticks_position('none')\n",
        "ax1.grid(axis='y', linestyle='-', color='#262626', linewidth=0.1, alpha=0.6)\n",
        "ax2.set_ylim(0, 40000)\n",
        "ymin, ymax = ax2.get_ylim()\n",
        "yticks = np.linspace(ymin, ymax, 8)\n",
        "ax2.set_yticks(yticks)\n",
        "yticks_rounded = np.round(yticks / 5000) * 5000\n",
        "yticks_k = [f\"{int(tick / 1000)}Mt\" for tick in yticks_rounded]\n",
        "ax2.set_yticklabels(yticks_k)\n",
        "ax2.tick_params(axis='y', labelsize=9)\n",
        "ax2.yaxis.set_ticks_position('none')\n",
        "\n",
        "# Add column labels\n",
        "for i, year in enumerate(df['year']):\n",
        "    if year in [1973, 1990, 1998, 2010, 2016, 2024]:\n",
        "        # Check positive and negative values\n",
        "        symbol = \"+\" if df['value'].iloc[i] >= 0 else \"-\"\n",
        "        value_text = f\"{symbol}{abs(df['value'].iloc[i]):,.2f}\"\n",
        "        \n",
        "        # Recent value bold\n",
        "        fontweight = 'bold' if year == df['year'].max() else 'normal'\n",
        "\n",
        "        # Set the offset based on the year\n",
        "        offset = 0.11 if year in [1973, 1990] else 0.05\n",
        "\n",
        "        # Add label\n",
        "        ax1.text(year, df['value'].iloc[i] + offset, value_text,\n",
        "                 ha='center', va='bottom', fontsize=7, color='#363636', fontweight=fontweight)\n",
        "\n",
        "# Remove spines\n",
        "for ax in [ax1, ax2]:\n",
        "    for spine in [\"top\", \"bottom\"]:\n",
        "        ax.spines[spine].set_visible(False)\n",
        "\n",
        "# Add Data Source\n",
        "spaces = ' ' * 23\n",
        "ax1.text(0, -0.16, f'{spaces}NASA Goddard Institute for Space Studies\\nThe Global Carbon Project\\'s fossil CO2 emissions dataset', \n",
        "         transform=ax1.transAxes, \n",
        "         fontsize=8, \n",
        "         color='gray', \n",
        "         ha='left', \n",
        "         family='sans-serif')\n",
        "\n",
        "# Add Data Source bold\n",
        "ax1.text(0, -0.16, 'Data Source:\\n ', \n",
        "         transform=ax1.transAxes, \n",
        "         fontsize=8, \n",
        "         color='gray', \n",
        "         ha='left', \n",
        "         family='sans-serif', \n",
        "         fontweight='bold')\n",
        "\n",
        " # Add Year label\n",
        "formatted_date = 2024 \n",
        "ax1.text(1, 1.12, f'{formatted_date}',\n",
        "    transform=ax1.transAxes, \n",
        "    fontsize=18, ha='right', va='top',\n",
        "    fontweight='bold', color='#D3D3D3')\n",
        "\n",
        "# Add Celsius\n",
        "ax1.text(-0.04, -0.08, '°C', \n",
        "    transform=ax1.transAxes, \n",
        "    fontsize=10, \n",
        "    fontweight='bold',\n",
        "    color='black')\n",
        "\n",
        "# Add CO2\n",
        "ax1.text(1.01, -0.08, r'CO$_2$', \n",
        "    transform=ax1.transAxes, \n",
        "    fontsize=10, \n",
        "    fontweight='bold',\n",
        "    color='black')\n",
        "\n",
        "# Adjust layout\n",
        "plt.tight_layout()\n",
        "\n",
        "# Save it...\n",
        "download_folder = os.path.join(os.path.expanduser(\"~\"), \"Downloads\")\n",
        "filename = os.path.join(download_folder, f\"FIG_NASA_Temperature_Anomalies\")\n",
        "plt.savefig(filename + \".png\", format='png', bbox_inches='tight')\n",
        "\n",
        "# Show the plot!\n",
        "plt.show()"
      ],
      "id": "5ff817ed",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "![](FIG_NASA_Temperature_Anomalies.png){.lightbox width=\"100%\"}\n",
        "\n",
        "\n",
        "{{< bluesky-comments at://did:plc:u7zijsa6hoysmuw2cr476odq/app.bsky.feed.post/3lejnowms6223 >}}"
      ],
      "id": "b70c6ff8"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\guill\\AppData\\Roaming\\Python\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}