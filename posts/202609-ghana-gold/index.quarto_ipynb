{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Gold Ghana Where Does It Go?\"\n",
        "\n",
        "description: \"An analysis of Ghanaâ€™s gold export market and their trading key partners.\"\n",
        "\n",
        "categories: [economy, python]\n",
        "\n",
        "date: \"2026-08-27\"\n",
        "\n",
        "keywords: [\"wealth-income\"]\n",
        "\n",
        "image: FIG_OWD_Globalization_Eras.png\n",
        "image-alt: |\n",
        "  Globalization_Eras\n",
        "\n",
        "jupyter: python3\n",
        "\n",
        "format:\n",
        "  html:\n",
        "    code-fold: true\n",
        "---\n",
        "\n",
        "\n",
        "## Summary\n",
        "\n",
        "The chart shows the main importers of gold from Ghana, one of the world's largest producers and exporters.\n"
      ],
      "id": "48e27f97"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: true\n",
        "#| output: false\n",
        "#| warning: false\n",
        "# Libraries\n",
        "# ================================================\n",
        "import comtradeapicall\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import requests\n",
        "import matplotlib.image as mpimg\n",
        "import os\n",
        "from io import BytesIO\n",
        "from matplotlib.offsetbox import OffsetImage, AnnotationBbox\n",
        "\n",
        "# Data Extraction\n",
        "# ================================================\n",
        "# Convert ISO to code\n",
        "country = comtradeapicall.convertCountryIso3ToCode('GHA')[:3]\n",
        "\n",
        "# Create df using parameters\n",
        "df = comtradeapicall.previewFinalData(\n",
        "    typeCode='C',              # Goods (C) or Services (S)\n",
        "    freqCode='A',              # Annual (A) or Monthly (M)\n",
        "    clCode='HS',               # Indicates the product classification used and which version (HS, SITC)\n",
        "    period='2023',             # Period\n",
        "    reporterCode=country,      # Country origin (reporter)\n",
        "    cmdCode='7108',            # Product code in conjunction with classification code (7108 Gold)\n",
        "    flowCode='X',              # Exportaciones (X) imports (M)\n",
        "    partnerCode=None,          # Country destination (partner)\n",
        "    partner2Code=None,         # The primary partner country or geographic area for the respective trade flow\n",
        "    customsCode=None,          # A secondary partner country or geographic area for the respective trade flow\n",
        "    motCode=None,              # The mode of transport used when goods enter or leave the economic territory of a country\n",
        "    maxRecords=500,            # Limit number of returned records\n",
        "    format_output='JSON',      # The output format. CSV or JSON\n",
        "    aggregateBy=None,          # Option for aggregating the query\n",
        "    breakdownMode='classic',   # Option to select the classic (trade by partner/product) or plus (extended breakdown) mode\n",
        "    countOnly=None,            # Return the actual number of records if set to True\n",
        "    includeDesc=True           # Option to include the description or not\n",
        ")\n",
        "\n",
        "# Sort data by value\n",
        "df = df.sort_values(by='primaryValue', ascending=False)\n",
        "\n",
        "# Select and rename columns\n",
        "df = df[['flowDesc', 'refYear', 'reporterISO', 'reporterDesc', 'partnerISO', 'partnerDesc', 'primaryValue', 'customsDesc', 'motDesc', 'cmdCode', 'cmdDesc']]\n",
        "df.columns = ['flow', 'year','reporter_iso','reporter','partner_iso','partner','value','custom_desc','transport_mode', 'product_code', 'product']\n",
        "\n",
        "# Filter World partner\n",
        "df = df[df['partner_iso'] != 'W00']\n",
        "\n",
        "# Solving names\n",
        "df.loc[df['partner_iso'] == 'HKG', 'partner'] = 'Hong Kong'\n",
        "df.loc[df['partner_iso'] == 'TUR', 'partner'] = 'Turkey'\n",
        "df.loc[df['partner_iso'] == 'KOR', 'partner'] = 'South Korea'\n",
        "df.loc[df['partner_iso'] == 'FRO', 'partner'] = 'Faroe Islands'\n",
        "\n",
        "print(df)\n",
        "\n",
        "# Data Visualization\n",
        "# ================================================\n",
        "# Font and style\n",
        "plt.rcParams.update({'font.family': 'sans-serif', 'font.sans-serif': ['Franklin Gothic'], 'font.size': 9})\n",
        "sns.set(style=\"white\", palette=\"muted\")\n",
        "\n",
        "# Create figure\n",
        "fig, ax = plt.subplots(figsize=(10, 6))\n",
        "\n",
        "# Barplot\n",
        "bars = sns.barplot(\n",
        "    data=df,\n",
        "    y='partner',\n",
        "    x='value',\n",
        "    color='goldenrod',\n",
        "    orient='h'\n",
        ")\n",
        "\n",
        "# Add title and subtitle\n",
        "fig.add_artist(plt.Line2D([0.155, 0.155], [0.87, 0.97], linewidth=6, color='#203764', solid_capstyle='butt'))\n",
        "plt.text(0.02, 1.13, f'Ghana Gold Exports', fontsize=16, fontweight='bold', ha='left', transform=plt.gca().transAxes)\n",
        "plt.text(0.02, 1.09, f'Leading gold importers from Ghana in 2024', fontsize=11, color='#262626', ha='left', transform=plt.gca().transAxes)\n",
        "plt.text(0.02, 1.05, f'(exports in $US billions)', fontsize=9, color='#262626', ha='left', transform=plt.gca().transAxes)\n",
        "\n",
        "# Axis labels and grid\n",
        "plt.xlabel('Exports (US$ billions)', fontsize=11, fontweight='bold')\n",
        "plt.ylabel('')\n",
        "plt.xticks(\n",
        "    ticks=plt.xticks()[0],\n",
        "    labels=[f'{tick / 1e9:.1f}' for tick in plt.xticks()[0]],\n",
        "    fontsize=9\n",
        ")\n",
        "plt.yticks(fontsize=9)\n",
        "plt.grid(axis='x', linestyle=':', color='gray', alpha=0.7, linewidth=0.5)\n",
        "\n",
        "# Remove spines\n",
        "ax = plt.gca()\n",
        "ax.spines['top'].set_visible(False)\n",
        "ax.spines['right'].set_visible(False)\n",
        "ax.spines['bottom'].set_linewidth(0.5)\n",
        "ax.spines['left'].set_linewidth(0.5)\n",
        "\n",
        " # Add Year label\n",
        "formatted_date = 2024 \n",
        "ax.text(1, 1.15, f'{formatted_date}',\n",
        "    transform=ax.transAxes,\n",
        "    fontsize=22, ha='right', va='top',\n",
        "    fontweight='bold', color='#D3D3D3')\n",
        "\n",
        "# Add value label for each bar\n",
        "for container in bars.containers:\n",
        "    for bar in container:\n",
        "        width = bar.get_width()\n",
        "        \n",
        "        # Format label\n",
        "        if width < 1e9:\n",
        "            label = f'{width / 1e6:.1f}M'  # Milions\n",
        "        else:\n",
        "            label = f'{width / 1e9:.2f}B'  # Bilions\n",
        "\n",
        "        plt.text(width + (0.025e9) * 6,\n",
        "                 bar.get_y() + bar.get_height() / 2,\n",
        "                 label,\n",
        "                 va='center', ha='left', fontsize=9)\n",
        "\n",
        "# Define flags\n",
        "flag_urls = {\n",
        "    'CHE': 'https://raw.githubusercontent.com/matahombres/CSS-Country-Flags-Rounded/master/flags/CH.png',\n",
        "    'ARE': 'https://raw.githubusercontent.com/matahombres/CSS-Country-Flags-Rounded/master/flags/AE.png',\n",
        "    'ZAF': 'https://raw.githubusercontent.com/matahombres/CSS-Country-Flags-Rounded/master/flags/ZA.png',\n",
        "    'IND': 'https://raw.githubusercontent.com/matahombres/CSS-Country-Flags-Rounded/master/flags/IN.png',\n",
        "    'TUR': 'https://raw.githubusercontent.com/matahombres/CSS-Country-Flags-Rounded/master/flags/TR.png',\n",
        "    'HKG': 'https://raw.githubusercontent.com/matahombres/CSS-Country-Flags-Rounded/master/flags/HK.png',\n",
        "    'KOR': 'https://raw.githubusercontent.com/matahombres/CSS-Country-Flags-Rounded/master/flags/KR.png',\n",
        "    'CHN': 'https://raw.githubusercontent.com/matahombres/CSS-Country-Flags-Rounded/master/flags/CN.png',\n",
        "    'DEU': 'https://raw.githubusercontent.com/matahombres/CSS-Country-Flags-Rounded/master/flags/DE.png',\n",
        "    'FRO': 'https://raw.githubusercontent.com/matahombres/CSS-Country-Flags-Rounded/master/flags/FO.png',\n",
        "    'SGP': 'https://raw.githubusercontent.com/matahombres/CSS-Country-Flags-Rounded/master/flags/SG.png'\n",
        "}\n",
        "\n",
        "# Load flags\n",
        "flags = {country: mpimg.imread(BytesIO(requests.get(url).content)) for country, url in flag_urls.items()}\n",
        "\n",
        "# Add flags with AnnotationBbox and OffsetImage\n",
        "for partner_iso, bar in zip(df['partner_iso'], bars.patches):\n",
        "    if partner_iso in flags:\n",
        "        img = flags[partner_iso]\n",
        "        imagebox = OffsetImage(img, zoom=0.03)\n",
        "        x = bar.get_width() + 0.03e9\n",
        "        y = bar.get_y() + bar.get_height()/2\n",
        "        ab = AnnotationBbox(imagebox, (x, y), frameon=False, box_alignment=(0,0.5), pad=0)\n",
        "        ax.add_artist(ab)\n",
        "\n",
        "# Add Data Source\n",
        "plt.text(0, -0.15, 'Data Source:', \n",
        "    transform=plt.gca().transAxes, \n",
        "    fontsize=8,\n",
        "    fontweight='bold',\n",
        "    color='gray')\n",
        "space = \" \" * 23\n",
        "plt.text(0, -0.15, space + 'UN Comtrade', \n",
        "    transform=plt.gca().transAxes, \n",
        "    fontsize=8,\n",
        "    color='gray')\n",
        "      \n",
        "# Adjust layout\n",
        "plt.tight_layout()\n",
        "\n",
        "# Save it...\n",
        "download_folder = os.path.join(os.path.expanduser(\"~\"), \"Downloads\")\n",
        "filename = os.path.join(download_folder, f\"FIG_COMT_Ghana_Gold_Exports\")\n",
        "plt.savefig(filename, dpi=300, bbox_inches='tight')\n",
        "\n",
        "# Show :)\n",
        "plt.show()"
      ],
      "id": "c279570b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "![](FIG_COMT_Ghana_Gold_Exports.png){.lightbox width=\"100%\"}\n",
        "\n",
        "\n",
        "{{< bluesky-comments at://did:plc:u7zijsa6hoysmuw2cr476odq/app.bsky.feed.post/3lejnowms6223 >}}"
      ],
      "id": "05fcc199"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\guill\\AppData\\Roaming\\Python\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}