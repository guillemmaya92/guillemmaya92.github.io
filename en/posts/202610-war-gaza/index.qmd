---
title: "The Power Imbalance in Gaza's Conflict?"

filename: "posts/202610-war-gaza/index"

description: "The disproportionate nature of the Gaza conflict."

categories: [economy, python]

date: "2026-10-14"

keywords: ["war"]

image: FIG_WB_Israel_Dominance_2024.png
image-alt: |
  Israel_Dominance

jupyter: python3

format:
  html:
    code-fold: true
---

## Summary

The graphic shows the disproportionate and asymmetrical nature of the Gaza conflict, contrasting Israel’s military and economic strengths with Gaza’s more limited resources and vulnerable population.

```{python}
#| eval: false
#| echo: true
#| output: false
#| warning: false
# Libraries
# ================================================
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import requests
import matplotlib.image as mpimg
import os
from io import BytesIO
from matplotlib.offsetbox import OffsetImage, AnnotationBbox

# Data Extraction
# ================================================
# Crear el DataFrame
data = {
    'year': ['2024', '2024'],
    'iso3': ['PSE', 'ISR'],
    'country': ['Palestine', 'Israel'],
    'killed': [65696, 1983]
}

df = pd.DataFrame(data)

# Data Visualization
# ================================================
# Font and style
plt.rcParams.update({'font.family': 'sans-serif', 'font.sans-serif': ['Franklin Gothic'], 'font.size': 9})
sns.set(style="white", palette="muted")

# Create figure
fig, ax = plt.subplots(figsize=(10, 4))

# Barplot
bars = sns.barplot(
    data=df,
    y='country',
    x='killed',
    hue='iso3',
    dodge=False,
    palette={'PSE': '#b30129', 'ISR': '#3d4dbd'},
    orient='h',
    width=0.5,
    legend=False
)

# Add title and subtitle
fig.add_artist(plt.Line2D([0.09, 0.09], [0.77, 0.91], linewidth=6, color='#203764', solid_capstyle='butt'))
plt.text(0.02, 1.22, f'The Human Cost Of Israeli-Palestinian Conflict', fontsize=16, fontweight='bold', ha='left', transform=plt.gca().transAxes)
plt.text(0.02, 1.14, f'Israeli & Palestinian deaths since October 2023', fontsize=11, color='#262626', ha='left', transform=plt.gca().transAxes)
plt.text(0.02, 1.07, f'(number of fatalities)', fontsize=9, color='#262626', ha='left', transform=plt.gca().transAxes)

# Axis labels and grid
plt.xlabel('')
plt.ylabel('')
ticks = plt.xticks()[0]
plt.xticks(ticks, [f'{tick:,.0f}' for tick in ticks], fontsize=9)
plt.yticks(fontsize=9)
plt.grid(axis='x', linestyle=':', color='gray', alpha=0.7, linewidth=0.5)

# Remove spines
ax = plt.gca()
ax.spines['top'].set_visible(False)
ax.spines['right'].set_visible(False)
ax.spines['left'].set_linewidth(False)
ax.spines['bottom'].set(color='gray', linewidth=1)

 # Add Year label
formatted_date = "2025-09"
ax.text(1, 1.25, f'{formatted_date}',
    transform=ax.transAxes,
    fontsize=22, ha='right', va='top',
    fontweight='bold', color='#D3D3D3')

# Add value label for each bar
for container, iso3_list in zip(bars.containers, df['iso3']):
    for bar, iso3 in zip(container, [iso3_list]*len(container)):
        width = bar.get_width()
        label = f'{width:,.0f}'

        # Number after bar
        plt.text(
            width + 3000,
            bar.get_y() + bar.get_height() / 2,
            label,
            va='center',
            ha='left',
            fontsize=9
        )

        # Middle bar text
        if iso3 == 'PSE':
            plt.text(
                width / 2,
                bar.get_y() + bar.get_height() * 0.4,
                "33-fold",
                va='center',
                ha='center',
                fontsize=20,
                fontweight='bold',
                color='white'
            )
            plt.text(
                width / 2,
                bar.get_y() + bar.get_height() * 0.75,
                "deaths of Israel",
                va='center',
                ha='center',
                fontsize=9,
                fontweight='bold',
                color='white'
            )

# Define flags
flag_urls = {
    'PSE': 'https://raw.githubusercontent.com/matahombres/CSS-Country-Flags-Rounded/master/flags/PS.png',
    'ISR': 'https://raw.githubusercontent.com/matahombres/CSS-Country-Flags-Rounded/master/flags/IL.png'
}
flags = {country: mpimg.imread(BytesIO(requests.get(url).content)) for country, url in flag_urls.items()}

# Add flags
for partner_iso, bar in zip(df['iso3'], bars.patches):
    if partner_iso in flags:
        img = flags[partner_iso]
        imagebox = OffsetImage(img, zoom=0.035)
        x = bar.get_width()
        y = bar.get_y() + bar.get_height()/2
        ab = AnnotationBbox(imagebox, (x+500, y), frameon=False, box_alignment=(0,0.5), pad=0)
        ax.add_artist(ab)

# Add Data Source
plt.text(0, -0.2, 'Data Source:', 
    transform=plt.gca().transAxes, 
    fontsize=8,
    fontweight='bold',
    color='gray')
space = " " * 23
plt.text(0, -0.2, space + 'United Nations Office for the Coordination of Humanitarian Affairs (OCHA).', 
    transform=plt.gca().transAxes, 
    fontsize=8,
    color='gray')
      
# Adjust layout
plt.tight_layout()

# Save it...
download_folder = os.path.join(os.path.expanduser("~"), "Downloads")
filename = os.path.join(download_folder, f"FIG_OCHA_Gaza_Fatalities")
plt.savefig(filename, dpi=300, bbox_inches='tight')

# Show :)
plt.show()
```

![](FIG_OCHA_Gaza_Fatalities.png){.lightbox width="100%"}

